<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_278491_stockinfo.getStockInfo</api_name>
        <client_callable>false</client_callable>
        <description>calls the GetStockInfo REST Message and interprets the data</description>
        <name>getStockInfo</name>
        <script><![CDATA[function getStockInfo(identifier, date){
	try {
		var r = new sn_ws.RESTMessageV2('x_278491_stockinfo.GetStockInfo', 'Default GET');
		r.setStringParameterNoEscape('id', identifier);
		r.setStringParameterNoEscape('start', date);
		
		//override authentication profile
		//authentication type ='basic'/ 'oauth2'
		//r.setAuthentication(authentication type, profile name);
		
		//set a MID server name if one wants to run the message on MID
		//r.setMIDServer('MY_MID_SERVER');
		
		//if the message is configured to communicate through ECC queue, either
		//by setting a MID server or calling executeAsync, one needs to set skip_sensor
		//to true. Otherwise, one may get an intermittent error that the response body is null
		//r.setEccParameter('skip_sensor', true);
		
		var response = r.execute();
		var responseBody = response.getBody();
		var httpStatus = response.getStatusCode();
		
		var status;
		switch(httpStatus){
			case 200: status = "OK, everything worked as expected"; break;
			case 401: status = "Unauthorized, your user/password API keys are incorrect"; break;
			case 403: status = "Forbidden, you are not subscribed to the data feed requested"; break;
			case 404: status = "Not found, the endpoint requested does not exist"; break;
			case 429: status = "Too many requests, you have hit a limit"; break;
			case 500: status = "Internal server error, we have a problem with our server, try again later"; break;
			case 503: status = "Service unavailable, you have hit your throttle limit or Intrinio may be experiencing high system load"; break;
			default: status = "No meaning found"; break;
		}
		gs.info(status);
		gs.info(responseBody);
		gs.info(JSON.parse(responseBody).result_count);
		return JSON.parse(responseBody);
	}
	catch(ex) {
		gs.info("Uncaught error: " + ex);
	}
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-08 23:53:35</sys_created_on>
        <sys_id>b85e0355db01230078fe1461399619f8</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>getStockInfo</sys_name>
        <sys_package display_value="StockInfo" source="x_278491_stockinfo">62ecec99db01230078fe146139961945</sys_package>
        <sys_policy/>
        <sys_scope display_value="StockInfo">62ecec99db01230078fe146139961945</sys_scope>
        <sys_update_name>sys_script_include_b85e0355db01230078fe1461399619f8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-10-09 02:12:19</sys_updated_on>
    </sys_script_include>
</record_update>
